---
### Note: Much of this might be simplified with the github api to determine the release download url
#########################################################
# GitHub CLI
- name: Get GH cli version
  shell: curl https://github.com/cli/cli/releases/latest | grep -Po 'tag/v\K[^"]+'
  changed_when: false
  register: ghcli_version

# needs debug
#- name: Install remote GH cli package
#  dnf:
#    name: 'https://github.com/cli/cli/releases/download/v{{ ghcli_version }}/gh_{{ ghcli_version }}_linux_amd64.rpm'
#    state: present

#########################################################
# Terraform
- name: Get terraform version
  shell: curl https://github.com/hashicorp/terraform/releases/latest   | grep -Po 'tag/v\K[^"]+' 
  changed_when: false
  register: terraform_version

- name: Download terraform binary
  get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version.stdout }}/terraform_{{ terraform_version.stdout }}_linux_amd64.zip"
#    url: https://github.com/hashicorp/terraform/archive/v0.11.14.zip
    dest: "/tmp/tf_{{ terraform_version.stdout }}.zip"
    mode: 0755

- name: unzip terraform binary
  unarchive: 
    src: "/tmp/tf_{{ terraform_version.stdout }}.zip"
    remote_src: yes
    dest: /usr/local/bin/
    owner: root
    group: bin
    mode: 0755
  become: yes

#########################################################
# Vault
- name: Get Hashicorp Vault version
  shell: curl https://github.com/hashicorp/vault/releases/latest   | grep -Po 'tag/v\K[^"]+' 
  changed_when: false
  register: vault_version
- name: Download vault binary
  get_url:
    url: "https://releases.hashicorp.com/vault/{{ vault_version.stdout }}/vault_{{ vault_version.stdout }}_linux_amd64.zip"
    dest: "/tmp/vault_{{ vault_version.stdout }}.zip"
    mode: 0755

- name: unzip vault binary
  unarchive: 
    src: "/tmp/vault_{{ vault_version.stdout }}.zip"
    remote_src: yes
    dest: /usr/local/bin/
    owner: root
    group: bin
    mode: 0755
  become: yes

#########################################################
# OperatorSDK
- name: Download operator-sdk binary
  get_url:
    url: https://github.com/operator-framework/operator-sdk/releases/latest/download/operator-sdk_linux_amd64
    dest: /usr/local/bin/operator-sdk
    owner: root
    group: bin
    mode: 0755
  become: yes

#########################################################
# OpenShift CLI (oc)
- name: Get oc cli version
  shell: curl https://github.com/openshift/okd/releases/latest   | grep -Po 'tag/\K[^"]+'
  changed_when: false
  register: oc_version
- name: Get oc download URL
  shell: curl https://github.com/openshift/okd/releases/tag/"{{ oc_version.stdout }}" | grep "{{ oc_version.stdout }}" | grep linux | grep href | grep openshift-client | awk -F "\"" '{print $2}'
  changed_when: false
  register: oc_download_url

- name: Download oc binary
  get_url:
    url: "https://github.com/{{ oc_download_url.stdout }}"
#    url: "https://downloads-openshift-console.apps.klab.devops.gov.bc.ca/amd64/linux/oc.tar"
    dest: /tmp/oc.tar.gz
    mode: 0755

- name: unzip oc binary
  unarchive: 
    src: /tmp/oc.tar.gz
    dest: /usr/local/bin/
    owner: root
    group: bin
    mode: 0755
    exclude:
    - README.md
    - kubectl
  become: yes

#########################################################
# Minio CLI (mc)
- name: Download Minio Client binary
  get_url:
    url: "https://dl.min.io/client/mc/release/linux-amd64/mc"
    dest: /usr/local/bin/
    owner: root
    group: bin
    mode: 0755
  become: yes

#########################################################
# Kustomize
- name: Get kustomize version
  shell: curl https://github.com/kubernetes-sigs/kustomize/releases/latest  | grep -Po 'tag/\K[^"]+'
  changed_when: false
  register: kustomize_version

- name: Get kustomize download URL
  shell: curl https://github.com/kubernetes-sigs/kustomize/releases/tag/"{{ kustomize_version.stdout }}" | grep href | grep linux | grep amd64 | grep kustomize | awk -F "\"" '{print $2}'
  changed_when: false
  register: kustomize_download_url

- name: Download kustomize binary
  get_url:
    url: "https://github.com{{ kustomize_download_url.stdout }}"
    dest: "/tmp/kustomize.zip"
    mode: 0755

- name: unzip kustomize binary
  unarchive: 
    src: "/tmp/kustomize.zip"
    remote_src: yes
    dest: /usr/local/bin/
    owner: root
    group: bin
    mode: 0755
  become: yes

#########################################################
# jfrog cli
- name: Get JFrog cli
  shell: (cd /tmp; curl -fL https://getcli.jfrog.io | sh)

- name: move jfrog file
  copy:
    remote_src: yes
    src: "/tmp/jfrog"
    dest: "/usr/local/bin/jfrog"
    owner: root
    group: bin
    mode: 0755
  become: yes

- name: Install aws shell
  command: pip3 install aws-shell
  become: true

- name: Install aws boto3 python library
  command: pip3 install boto3
  become: true

